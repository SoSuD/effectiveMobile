// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/add_human": {
            "put": {
                "description": "Create a new human with auto-filled age, gender, nationality",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "humans"
                ],
                "summary": "Create a human",
                "parameters": [
                    {
                        "description": "Add Human payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiserver.addHumanRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Human"
                        }
                    },
                    "400": {
                        "description": "name and surname required",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/delete_human": {
            "delete": {
                "description": "Delete a human record by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "humans"
                ],
                "summary": "Delete human",
                "parameters": [
                    {
                        "description": "Delete Human request",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiserver.deleteHumanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/get_humans": {
            "get": {
                "description": "Retrieve humans with optional filtering and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "humans"
                ],
                "summary": "Get humans",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name filter",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Surname filter",
                        "name": "surname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Patronymic filter",
                        "name": "patronymic",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Gender filter",
                        "name": "gender",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Nationality filter",
                        "name": "nationality",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Minimum age filter",
                        "name": "min_age",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum age filter",
                        "name": "max_age",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Human"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/update_human": {
            "patch": {
                "description": "Update human fields by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "humans"
                ],
                "summary": "Update human",
                "parameters": [
                    {
                        "description": "Update Human request",
                        "name": "human",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiserver.updateHumanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apiserver.addHumanRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "имя\nrequired: true",
                    "type": "string",
                    "example": "John"
                },
                "patronymic": {
                    "description": "отчество\nrequired: false",
                    "type": "string",
                    "example": "Johnny"
                },
                "surname": {
                    "description": "фамилия\nrequired: true",
                    "type": "string",
                    "example": "Doe"
                }
            }
        },
        "apiserver.deleteHumanRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID человека\nrequired: true",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "apiserver.updateHumanRequest": {
            "type": "object",
            "properties": {
                "age": {
                    "description": "возраст\nrequired: false",
                    "type": "integer",
                    "example": 30
                },
                "gender": {
                    "description": "пол\nrequired: false",
                    "type": "string",
                    "example": "male"
                },
                "id": {
                    "description": "ID человека\nrequired: true",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "имя\nrequired: false",
                    "type": "string",
                    "example": "John"
                },
                "nationality": {
                    "description": "национальность\nrequired: false",
                    "type": "string",
                    "example": "RU"
                },
                "patronymic": {
                    "description": "отчество\nrequired: false",
                    "type": "string",
                    "example": "Johnny"
                },
                "surname": {
                    "description": "фамилия\nrequired: false",
                    "type": "string",
                    "example": "Doe"
                }
            }
        },
        "model.Human": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 25
                },
                "gender": {
                    "type": "string",
                    "example": "male"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "nationality": {
                    "type": "string",
                    "example": "RU"
                },
                "patronymic": {
                    "type": "string",
                    "example": "Ivanovich"
                },
                "surname": {
                    "type": "string",
                    "example": "Doe"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "EffectiveMobile API",
	Description:      "API server for EffectiveMobile service",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
